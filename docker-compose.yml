version: "3.8"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongo:
    image: mongodb/mongodb-community-server
    container_name: mongo
    hostname: mongo
    ports:
      - "27017:27017"
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo-data:/data/db

  datastore:
    build: ./Datastore
    platform: linux/amd64
    depends_on:
      - kafka
      - mongo
    container_name: datastore
    hostname: datastore
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:29092
      SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE: admin
      SPRING_DATA_MONGODB_USERNAME: root
      SPRING_DATA_MONGODB_PASSWORD: root
      SPRING_DATA_MONGODB_HOST: mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: github-crawler

  api:
    build: ./Api
    platform: linux/amd64
    depends_on:
      - kafka
      - datastore
    container_name: api
    hostname: api
    ports:
      - "8080:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:29092
      SERVICE_DATASTORE_URL: datastore:8080

  github-graphql-client:
    build: ./GitHubGraphQlClient
    platform: linux/amd64
    depends_on:
      - kafka
    container_name: github-graphql-client
    hostname: github-graphql-client
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:29092
      GITHUB_TOKEN: ${GITHUB_TOKEN}

volumes:
  mongo-data:
    external: true
